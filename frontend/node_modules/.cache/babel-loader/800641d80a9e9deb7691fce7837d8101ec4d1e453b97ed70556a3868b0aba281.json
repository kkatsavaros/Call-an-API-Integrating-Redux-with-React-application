{"ast":null,"code":"var _jsxFileName = \"D:\\\\Redux\\\\Redux_07_Integrate_Redux_in_React_app_react-redux\\\\to-do-app\\\\frontend\\\\src\\\\components\\\\Tasks.js\",\n  _s = $RefreshSig$();\n//rafce:\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport StoreContext from '../contexts/storeContext';\nimport { loadTasks } from '../store/tasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const store = useContext(StoreContext);\n  console.log(store);\n  const [tasks, settasks] = useState([]);\n  useEffect(() => {\n    store.dispatch(loadTasks());\n    const unsubscribe = store.subscribe(() => {\n      const storeTasks = store.getState().tasks.tasks;\n      if (storeTasks !== tasks) {\n        settasks(storeTasks);\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  console.log(tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", task.task, \" \"]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }, this)), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"2TWHpF7Ktawae+BlhofEQyomOnY=\");\n_c = Tasks;\nexport default Tasks;\n\n// useEffect, runs first when our component gets Render.\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useContext","useEffect","useState","StoreContext","loadTasks","jsxDEV","_jsxDEV","Tasks","_s","store","console","log","tasks","settasks","dispatch","unsubscribe","subscribe","storeTasks","getState","children","map","task","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Redux/Redux_07_Integrate_Redux_in_React_app_react-redux/to-do-app/frontend/src/components/Tasks.js"],"sourcesContent":["//rafce:\r\n\r\nimport React, {useContext, useEffect, useState} from 'react'\r\nimport StoreContext from '../contexts/storeContext';\r\nimport { loadTasks } from '../store/tasks';\r\n\r\nconst Tasks = () => {\r\n\r\n    const store = useContext(StoreContext);    \r\n    console.log(store);\r\n\r\n    const [tasks,settasks] = useState([]);\r\n\r\n    useEffect( () => {\r\n        store.dispatch(loadTasks());\r\n\r\n        const unsubscribe = store.subscribe( ()=>{            \r\n            const storeTasks = store.getState().tasks.tasks\r\n\r\n            if (storeTasks !== tasks){\r\n                settasks(storeTasks)\r\n            }            \r\n        });\r\n\r\n        return () => {\r\n            unsubscribe()        \r\n        }\r\n\r\n    }, [] )\r\n\r\n    console.log(tasks);\r\n\r\n    return (\r\n        <div>{tasks.map(task => <p key={task.id} > {task.task} </p> )} </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Tasks\r\n\r\n\r\n// useEffect, runs first when our component gets Render."],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,OAAOC,YAAY,MAAM,0BAA0B;AACnD,SAASC,SAAS,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAMC,KAAK,GAAGT,UAAU,CAACG,YAAY,CAAC;EACtCO,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,MAAM,CAACG,KAAK,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAErCD,SAAS,CAAE,MAAM;IACbQ,KAAK,CAACK,QAAQ,CAACV,SAAS,CAAC,CAAC,CAAC;IAE3B,MAAMW,WAAW,GAAGN,KAAK,CAACO,SAAS,CAAE,MAAI;MACrC,MAAMC,UAAU,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAACN,KAAK,CAACA,KAAK;MAE/C,IAAIK,UAAU,KAAKL,KAAK,EAAC;QACrBC,QAAQ,CAACI,UAAU,CAAC;MACxB;IACJ,CAAC,CAAC;IAEF,OAAO,MAAM;MACTF,WAAW,CAAC,CAAC;IACjB,CAAC;EAEL,CAAC,EAAE,EAAG,CAAC;EAEPL,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EAElB,oBACIN,OAAA;IAAAa,QAAA,GAAMP,KAAK,CAACQ,GAAG,CAACC,IAAI,iBAAIf,OAAA;MAAAa,QAAA,GAAkB,GAAC,EAACE,IAAI,CAACA,IAAI,EAAC,GAAC;IAAA,GAAvBA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAE,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAG7E,CAAC;AAAClB,EAAA,CA9BID,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAgCX,eAAeA,KAAK;;AAGpB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}