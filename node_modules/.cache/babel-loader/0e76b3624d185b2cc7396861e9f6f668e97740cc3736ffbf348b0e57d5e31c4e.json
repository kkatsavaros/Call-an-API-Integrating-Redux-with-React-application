{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"./api\";\n//import axios from \"../utils/http\";\nlet id = 0;\nconst initialState = {\n  tasks: [],\n  loading: false,\n  error: null\n};\n\n// export const fetchTasks = createAsyncThunk(\n//     \"fetchTasks\",\n//     async (a, { rejectWithValue }) => {\n//         try {\n//             const response = await axios.get(\"/tasks\");\n//             return { tasks: response.data };\n//         } catch (error) {\n//             return rejectWithValue({ error: error.message });\n//         }\n//     }\n// );\n\nconst taskSlice = createSlice({\n  name: \"tasks\",\n  initialState,\n  reducers: {\n    // action: function\n    apiRequested: (state, action) => {\n      state.loading = true;\n    },\n    apiRequestFailed: (state, action) => {\n      state.loading = false;\n    },\n    getTasks: (state, action) => {\n      state.tasks = action.payload;\n      state.loading = false;\n    },\n    addTask: (state, action) => {\n      state.tasks.push(action.payload);\n    },\n    removeTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      state.tasks.splice(index, 1);\n    },\n    completedTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload.id);\n      state.tasks[index].completed = action.payload.completed;\n    }\n  }\n  // extraReducers: {\n  //     [fetchTasks.pending]: (state, action) => {\n  //         state.loading = true;\n  //     },\n\n  //     [fetchTasks.fulfilled]: (state, action) => {\n  //         state.tasks = action.payload.tasks;\n  //         state.loading = false;\n  //     },\n\n  //     [fetchTasks.rejected]: (state, action) => {\n  //         state.error = action.payload.error;\n  //         state.loading = false;\n  //     },\n  // },\n});\n\nexport const {\n  apiRequested,\n  apiRequestFailed,\n  getTasks,\n  addTask,\n  removeTask,\n  completedTask\n} = taskSlice.actions;\nexport default taskSlice.reducer;\n\n// Action Creators\nconst url = \"/tasks\";\nexport const loadTasks = () => apiCallBegan({\n  url,\n  onStart: apiRequested.type,\n  onSuccess: getTasks.type,\n  onError: apiRequestFailed.type\n});\nexport const addNewTask = task => apiCallBegan({\n  url,\n  method: \"POST\",\n  data: task,\n  onSuccess: addTask.type\n});\nexport const updateCompleted = task => apiCallBegan({\n  // /tasks/6\n  url: `${url}/${task.id}`,\n  method: \"PATCH\",\n  data: task,\n  onSuccess: completedTask.type\n});\nexport const deleteTask = task => apiCallBegan({\n  // /tasks/6\n  url: `${url}/${task.id}`,\n  method: \"DELETE\",\n  onSuccess: removeTask.type\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","apiCallBegan","id","initialState","tasks","loading","error","taskSlice","name","reducers","apiRequested","state","action","apiRequestFailed","getTasks","payload","addTask","push","removeTask","index","findIndex","task","splice","completedTask","completed","actions","reducer","url","loadTasks","onStart","type","onSuccess","onError","addNewTask","method","data","updateCompleted","deleteTask"],"sources":["D:/Redux/Redux_06_Integrate_Redux_in_React_app/to-do-app/src/store/tasks.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegan } from \"./api\";\r\n//import axios from \"../utils/http\";\r\nlet id = 0;\r\nconst initialState = {\r\n    tasks: [],\r\n    loading: false,\r\n    error: null,\r\n};\r\n\r\n// export const fetchTasks = createAsyncThunk(\r\n//     \"fetchTasks\",\r\n//     async (a, { rejectWithValue }) => {\r\n//         try {\r\n//             const response = await axios.get(\"/tasks\");\r\n//             return { tasks: response.data };\r\n//         } catch (error) {\r\n//             return rejectWithValue({ error: error.message });\r\n//         }\r\n//     }\r\n// );\r\n\r\nconst taskSlice = createSlice({\r\n    name: \"tasks\",\r\n    initialState,\r\n    reducers: {\r\n        // action: function\r\n        apiRequested: (state, action) => {\r\n            state.loading = true;\r\n        },\r\n        apiRequestFailed: (state, action) => {\r\n            state.loading = false;\r\n        },\r\n        getTasks: (state, action) => {\r\n            state.tasks = action.payload;\r\n            state.loading = false;\r\n        },\r\n        addTask: (state, action) => {\r\n            state.tasks.push(action.payload);\r\n        },\r\n        removeTask: (state, action) => {\r\n            const index = state.tasks.findIndex(\r\n                (task) => task.id === action.payload.id\r\n            );\r\n            state.tasks.splice(index, 1);\r\n        },\r\n        completedTask: (state, action) => {\r\n            const index = state.tasks.findIndex(\r\n                (task) => task.id === action.payload.id\r\n            );\r\n            state.tasks[index].completed = action.payload.completed;\r\n        },\r\n    },\r\n    // extraReducers: {\r\n    //     [fetchTasks.pending]: (state, action) => {\r\n    //         state.loading = true;\r\n    //     },\r\n\r\n    //     [fetchTasks.fulfilled]: (state, action) => {\r\n    //         state.tasks = action.payload.tasks;\r\n    //         state.loading = false;\r\n    //     },\r\n\r\n    //     [fetchTasks.rejected]: (state, action) => {\r\n    //         state.error = action.payload.error;\r\n    //         state.loading = false;\r\n    //     },\r\n    // },\r\n});\r\n\r\nexport const {\r\n    apiRequested,\r\n    apiRequestFailed,\r\n    getTasks,\r\n    addTask,\r\n    removeTask,\r\n    completedTask,\r\n} = taskSlice.actions;\r\nexport default taskSlice.reducer;\r\n\r\n// Action Creators\r\nconst url = \"/tasks\";\r\n\r\nexport const loadTasks = () =>\r\n    apiCallBegan({\r\n        url,\r\n        onStart: apiRequested.type,\r\n        onSuccess: getTasks.type,\r\n        onError: apiRequestFailed.type,\r\n    });\r\n\r\nexport const addNewTask = (task) =>\r\n    apiCallBegan({\r\n        url,\r\n        method: \"POST\",\r\n        data: task,\r\n        onSuccess: addTask.type,\r\n    });\r\n\r\nexport const updateCompleted = (task) =>\r\n    apiCallBegan({\r\n        // /tasks/6\r\n        url: `${url}/${task.id}`,\r\n        method: \"PATCH\",\r\n        data: task,\r\n        onSuccess: completedTask.type,\r\n    });\r\n\r\nexport const deleteTask = (task) =>\r\n    apiCallBegan({\r\n        // /tasks/6\r\n        url: `${url}/${task.id}`,\r\n        method: \"DELETE\",\r\n        onSuccess: removeTask.type,\r\n    });\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}